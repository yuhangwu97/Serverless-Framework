// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.24.3
// source: proto/business.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Business Record message
type BusinessRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Priority      int32                  `protobuf:"varint,6,opt,name=priority,proto3" json:"priority,omitempty"`
	UserId        string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metadata      string                 `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusinessRecord) Reset() {
	*x = BusinessRecord{}
	mi := &file_proto_business_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessRecord) ProtoMessage() {}

func (x *BusinessRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessRecord.ProtoReflect.Descriptor instead.
func (*BusinessRecord) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{0}
}

func (x *BusinessRecord) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BusinessRecord) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BusinessRecord) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BusinessRecord) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *BusinessRecord) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BusinessRecord) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *BusinessRecord) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BusinessRecord) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *BusinessRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *BusinessRecord) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request messages
type GetBusinessDataRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBusinessDataRequest) Reset() {
	*x = GetBusinessDataRequest{}
	mi := &file_proto_business_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessDataRequest) ProtoMessage() {}

func (x *GetBusinessDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessDataRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessDataRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{1}
}

func (x *GetBusinessDataRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetBusinessDataRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBusinessDataRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetBusinessDataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []*BusinessRecord      `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total         int32                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBusinessDataResponse) Reset() {
	*x = GetBusinessDataResponse{}
	mi := &file_proto_business_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBusinessDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessDataResponse) ProtoMessage() {}

func (x *GetBusinessDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessDataResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{2}
}

func (x *GetBusinessDataResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetBusinessDataResponse) GetData() []*BusinessRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetBusinessDataResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetBusinessDataResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Priority      int32                  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
	UserId        string                 `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Metadata      string                 `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordRequest) Reset() {
	*x = CreateRecordRequest{}
	mi := &file_proto_business_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordRequest) ProtoMessage() {}

func (x *CreateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordRequest.ProtoReflect.Descriptor instead.
func (*CreateRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{3}
}

func (x *CreateRecordRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateRecordRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRecordRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CreateRecordRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateRecordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateRecordRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type CreateRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          *BusinessRecord        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRecordResponse) Reset() {
	*x = CreateRecordResponse{}
	mi := &file_proto_business_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRecordResponse) ProtoMessage() {}

func (x *CreateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRecordResponse.ProtoReflect.Descriptor instead.
func (*CreateRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateRecordResponse) GetData() *BusinessRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRecordsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Category      string                 `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordsRequest) Reset() {
	*x = GetRecordsRequest{}
	mi := &file_proto_business_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsRequest) ProtoMessage() {}

func (x *GetRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsRequest.ProtoReflect.Descriptor instead.
func (*GetRecordsRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{5}
}

func (x *GetRecordsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetRecordsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecordsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetRecordsRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *GetRecordsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type GetRecordsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []*BusinessRecord      `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Total         int64                  `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit         int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordsResponse) Reset() {
	*x = GetRecordsResponse{}
	mi := &file_proto_business_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordsResponse) ProtoMessage() {}

func (x *GetRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordsResponse.ProtoReflect.Descriptor instead.
func (*GetRecordsResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{6}
}

func (x *GetRecordsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRecordsResponse) GetData() []*BusinessRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRecordsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetRecordsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetRecordsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UpdateRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Category      string                 `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Priority      int32                  `protobuf:"varint,7,opt,name=priority,proto3" json:"priority,omitempty"`
	Metadata      string                 `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecordRequest) Reset() {
	*x = UpdateRecordRequest{}
	mi := &file_proto_business_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecordRequest) ProtoMessage() {}

func (x *UpdateRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecordRequest.ProtoReflect.Descriptor instead.
func (*UpdateRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRecordRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRecordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateRecordRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateRecordRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRecordRequest) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UpdateRecordRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateRecordRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateRecordRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type UpdateRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          *BusinessRecord        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRecordResponse) Reset() {
	*x = UpdateRecordResponse{}
	mi := &file_proto_business_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRecordResponse) ProtoMessage() {}

func (x *UpdateRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRecordResponse.ProtoReflect.Descriptor instead.
func (*UpdateRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateRecordResponse) GetData() *BusinessRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordRequest) Reset() {
	*x = DeleteRecordRequest{}
	mi := &file_proto_business_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordRequest) ProtoMessage() {}

func (x *DeleteRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordRequest.ProtoReflect.Descriptor instead.
func (*DeleteRecordRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRecordRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteRecordRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type DeleteRecordResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRecordResponse) Reset() {
	*x = DeleteRecordResponse{}
	mi := &file_proto_business_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRecordResponse) ProtoMessage() {}

func (x *DeleteRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRecordResponse.ProtoReflect.Descriptor instead.
func (*DeleteRecordResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteRecordResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteRecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetRecordByIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordByIdRequest) Reset() {
	*x = GetRecordByIdRequest{}
	mi := &file_proto_business_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordByIdRequest) ProtoMessage() {}

func (x *GetRecordByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordByIdRequest.ProtoReflect.Descriptor instead.
func (*GetRecordByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{11}
}

func (x *GetRecordByIdRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetRecordByIdRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetRecordByIdResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          *BusinessRecord        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRecordByIdResponse) Reset() {
	*x = GetRecordByIdResponse{}
	mi := &file_proto_business_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRecordByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecordByIdResponse) ProtoMessage() {}

func (x *GetRecordByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecordByIdResponse.ProtoReflect.Descriptor instead.
func (*GetRecordByIdResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{12}
}

func (x *GetRecordByIdResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetRecordByIdResponse) GetData() *BusinessRecord {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetRecordByIdResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_business_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{13}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_business_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_business_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_business_proto_rawDescGZIP(), []int{14}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

var File_proto_business_proto protoreflect.FileDescriptor

const file_proto_business_proto_rawDesc = "" +
	"\n" +
	"\x14proto/business.proto\x12\bbusiness\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x02\n" +
	"\x0eBusinessRecord\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1a\n" +
	"\bpriority\x18\x06 \x01(\x05R\bpriority\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12\x1a\n" +
	"\bmetadata\x18\b \x01(\tR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"[\n" +
	"\x16GetBusinessDataRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\x91\x01\n" +
	"\x17GetBusinessDataResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x04data\x18\x02 \x03(\v2\x18.business.BusinessRecordR\x04data\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\xba\x01\n" +
	"\x13CreateRecordRequest\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1a\n" +
	"\bmetadata\x18\x06 \x01(\tR\bmetadata\"x\n" +
	"\x14CreateRecordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x04data\x18\x02 \x01(\v2\x18.business.BusinessRecordR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x8a\x01\n" +
	"\x11GetRecordsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1a\n" +
	"\bcategory\x18\x04 \x01(\tR\bcategory\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"\x9c\x01\n" +
	"\x12GetRecordsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x04data\x18\x02 \x03(\v2\x18.business.BusinessRecordR\x04data\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"\xe2\x01\n" +
	"\x13UpdateRecordRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1a\n" +
	"\bcategory\x18\x05 \x01(\tR\bcategory\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1a\n" +
	"\bpriority\x18\a \x01(\x05R\bpriority\x12\x1a\n" +
	"\bmetadata\x18\b \x01(\tR\bmetadata\"x\n" +
	"\x14UpdateRecordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x04data\x18\x02 \x01(\v2\x18.business.BusinessRecordR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\">\n" +
	"\x13DeleteRecordRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"J\n" +
	"\x14DeleteRecordResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"?\n" +
	"\x14GetRecordByIdRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"y\n" +
	"\x15GetRecordByIdResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12,\n" +
	"\x04data\x18\x02 \x01(\v2\x18.business.BusinessRecordR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x14\n" +
	"\x12HealthCheckRequest\"G\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice2\xbd\x04\n" +
	"\x0fBusinessService\x12J\n" +
	"\vHealthCheck\x12\x1c.business.HealthCheckRequest\x1a\x1d.business.HealthCheckResponse\x12V\n" +
	"\x0fGetBusinessData\x12 .business.GetBusinessDataRequest\x1a!.business.GetBusinessDataResponse\x12M\n" +
	"\fCreateRecord\x12\x1d.business.CreateRecordRequest\x1a\x1e.business.CreateRecordResponse\x12G\n" +
	"\n" +
	"GetRecords\x12\x1b.business.GetRecordsRequest\x1a\x1c.business.GetRecordsResponse\x12P\n" +
	"\rGetRecordById\x12\x1e.business.GetRecordByIdRequest\x1a\x1f.business.GetRecordByIdResponse\x12M\n" +
	"\fUpdateRecord\x12\x1d.business.UpdateRecordRequest\x1a\x1e.business.UpdateRecordResponse\x12M\n" +
	"\fDeleteRecord\x12\x1d.business.DeleteRecordRequest\x1a\x1e.business.DeleteRecordResponseB\x1fZ\x1dgolang-business-service/protob\x06proto3"

var (
	file_proto_business_proto_rawDescOnce sync.Once
	file_proto_business_proto_rawDescData []byte
)

func file_proto_business_proto_rawDescGZIP() []byte {
	file_proto_business_proto_rawDescOnce.Do(func() {
		file_proto_business_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_business_proto_rawDesc), len(file_proto_business_proto_rawDesc)))
	})
	return file_proto_business_proto_rawDescData
}

var file_proto_business_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_business_proto_goTypes = []any{
	(*BusinessRecord)(nil),          // 0: business.BusinessRecord
	(*GetBusinessDataRequest)(nil),  // 1: business.GetBusinessDataRequest
	(*GetBusinessDataResponse)(nil), // 2: business.GetBusinessDataResponse
	(*CreateRecordRequest)(nil),     // 3: business.CreateRecordRequest
	(*CreateRecordResponse)(nil),    // 4: business.CreateRecordResponse
	(*GetRecordsRequest)(nil),       // 5: business.GetRecordsRequest
	(*GetRecordsResponse)(nil),      // 6: business.GetRecordsResponse
	(*UpdateRecordRequest)(nil),     // 7: business.UpdateRecordRequest
	(*UpdateRecordResponse)(nil),    // 8: business.UpdateRecordResponse
	(*DeleteRecordRequest)(nil),     // 9: business.DeleteRecordRequest
	(*DeleteRecordResponse)(nil),    // 10: business.DeleteRecordResponse
	(*GetRecordByIdRequest)(nil),    // 11: business.GetRecordByIdRequest
	(*GetRecordByIdResponse)(nil),   // 12: business.GetRecordByIdResponse
	(*HealthCheckRequest)(nil),      // 13: business.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 14: business.HealthCheckResponse
	(*timestamppb.Timestamp)(nil),   // 15: google.protobuf.Timestamp
}
var file_proto_business_proto_depIdxs = []int32{
	15, // 0: business.BusinessRecord.created_at:type_name -> google.protobuf.Timestamp
	15, // 1: business.BusinessRecord.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: business.GetBusinessDataResponse.data:type_name -> business.BusinessRecord
	0,  // 3: business.CreateRecordResponse.data:type_name -> business.BusinessRecord
	0,  // 4: business.GetRecordsResponse.data:type_name -> business.BusinessRecord
	0,  // 5: business.UpdateRecordResponse.data:type_name -> business.BusinessRecord
	0,  // 6: business.GetRecordByIdResponse.data:type_name -> business.BusinessRecord
	13, // 7: business.BusinessService.HealthCheck:input_type -> business.HealthCheckRequest
	1,  // 8: business.BusinessService.GetBusinessData:input_type -> business.GetBusinessDataRequest
	3,  // 9: business.BusinessService.CreateRecord:input_type -> business.CreateRecordRequest
	5,  // 10: business.BusinessService.GetRecords:input_type -> business.GetRecordsRequest
	11, // 11: business.BusinessService.GetRecordById:input_type -> business.GetRecordByIdRequest
	7,  // 12: business.BusinessService.UpdateRecord:input_type -> business.UpdateRecordRequest
	9,  // 13: business.BusinessService.DeleteRecord:input_type -> business.DeleteRecordRequest
	14, // 14: business.BusinessService.HealthCheck:output_type -> business.HealthCheckResponse
	2,  // 15: business.BusinessService.GetBusinessData:output_type -> business.GetBusinessDataResponse
	4,  // 16: business.BusinessService.CreateRecord:output_type -> business.CreateRecordResponse
	6,  // 17: business.BusinessService.GetRecords:output_type -> business.GetRecordsResponse
	12, // 18: business.BusinessService.GetRecordById:output_type -> business.GetRecordByIdResponse
	8,  // 19: business.BusinessService.UpdateRecord:output_type -> business.UpdateRecordResponse
	10, // 20: business.BusinessService.DeleteRecord:output_type -> business.DeleteRecordResponse
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_business_proto_init() }
func file_proto_business_proto_init() {
	if File_proto_business_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_business_proto_rawDesc), len(file_proto_business_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_business_proto_goTypes,
		DependencyIndexes: file_proto_business_proto_depIdxs,
		MessageInfos:      file_proto_business_proto_msgTypes,
	}.Build()
	File_proto_business_proto = out.File
	file_proto_business_proto_goTypes = nil
	file_proto_business_proto_depIdxs = nil
}
